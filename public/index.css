:root {
  --clr-primary: rgb(54, 112, 199);
  --clr-light: #f4f4f4;
  --clr-dark: #333;
  --clr-warning: rgb(99, 36, 36);
}

*,
*::before,
*::after {
  font-family: inherit;
  box-sizing: border-box;
}

body {
margin:0;
font-weight: 300;
font-size: 1.5rem;
background-color: var(--clr-primary);
color: var( --clr-light);

display: grid;
grid:
    "header header header header" auto
    "...... lists  active ......" auto /
    1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;
}

.title {
  grid-area: header;
  text-align: center;
  font-size:calc(7vw + 2rem);
  font-weight: 900;
  margin: 0.2em 0 0.5em;
}

.all-tasks {
  grid-area: lists;
}

.task-list {
  line-height:1.7;
  list-style: circle;
  padding-left: 1.1em;
}

.list-name {
  cursor: pointer;
}

.list-name:hover {
  opacity: 0.7;
}

.active-list {
  font-weight: 700;
}

.btn {
  cursor: pointer;
  background:0;
  border:0;
  padding:0;
  color:inherit;
  
}

.btn.create {
  font-size: 1.5rem;
  font-weight: 900;
  margin-right: 0.25em;
}

.btn.create:hover {
  opacity:0.7;
}

form {
  display: flex;
}
/* new list input button */
.new {
  background: transparent;
  border: 0;
  color: inherit;
  border-bottom: 1px solid currentColor;
  font-size: inherit;
  order:2;
}
/* new list text */
.new.list {
  font-size: 1.2rem;
}

.todo-list {
  --spacer: 2rem;
  grid-area: active;
  background: var(--clr-light);
  color: var(--clr-dark);
}

.todo-header{
  padding:var(--spacer);
  background: #e4e4e4;
  display:flex;
  align-items: center;
  justify-content: space-between;
}

.list-title {
  margin:0;
}

.task-count {
  margin:0;
  font-size: 1rem;
}

.todo-body {
  padding:var(--spacer);
  position:relative;
}

.task label {
  display: inline-flex;
  align-items: center;
  position: relative;
  margin-bottom: 2rem;
  cursor:pointer;
}
.task {
  position:relative;
  
}
.task::after {
  content:'';
  position:absolute;
  bottom:40%;
  right:0;
  left:0;
  opacity: 0.1;
  height: 1px;
  background: currentColor;
  
}



/* custom checkbox */

[type="checkbox"]{
  opacity:0;
  position:absolute;
}

.custom-checkbox {
  display: inline-block;
  cursor:pointer;
  border: 2px solid currentColor;
  border-radius: 50%;
  height: .75em;
  width: .75em;
  margin-right: 0.75em;
  transform: scale(1);
  transition: transform 200ms ease-in-out;
}
/* plus combinator is saying get the label (contains custom checkbox) that is the sibling of the checkbox */
/* we can tab through the invisible checkbox and transforming the custom checkbox */
.task:hover 
.custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox {
  transform: scale(1.2);
  color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox {
  background: var(--clr-primary);
  border-color: var(--clr-primary);
  box-shadow: inset 0 0 0px 2px white;
}

.task label::after {

  content:'';
  position: absolute;
  left:1.5em;
  right:0;
  top: 50%;
  height: 3px;
  background: currentColor;
  transform:scaleX(0);
}

[type="checkbox"]:checked + label::after {
  transform: scaleX(1);
}

.delete-stuff {
  display:flex;
  justify-content: space-evenly;
  position:absolute;
  width: 100%;
  left: 0;
  bottom: -35px;
  color: var(--clr-light)
}

.btn.delete {
  opacity: 0.7;
  font-size: 1rem;
}

.btn.delete:hover{
  color: var(--clr-warning)
}

